diff -ruN src/syscall.c src-finished/syscall.c
--- src/syscall.c	2022-05-20 22:36:18.000000000 +0800
+++ src-finished/syscall.c	2023-02-25 22:59:42.000000000 +0800
@@ -103,6 +103,8 @@
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_getreadcount(void);
+extern int readcount ;
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +128,7 @@
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_getreadcount] sys_getreadcount
 };
 
 void
@@ -136,6 +139,10 @@
 
   num = curproc->tf->eax;
   if(num > 0 && num < NELEM(syscalls) && syscalls[num]) {
+    if (num == SYS_read)
+    {
+      readcount++;
+    }
     curproc->tf->eax = syscalls[num]();
   } else {
     cprintf("%d %s: unknown sys call %d\n",
diff -ruN src/syscall.h src-finished/syscall.h
--- src/syscall.h	2022-05-20 22:36:20.000000000 +0800
+++ src-finished/syscall.h	2023-02-25 22:59:42.000000000 +0800
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_getreadcount 22
diff -ruN src/sysproc.c src-finished/sysproc.c
--- src/sysproc.c	2022-05-20 22:36:18.000000000 +0800
+++ src-finished/sysproc.c	2023-02-25 22:59:42.000000000 +0800
@@ -7,6 +7,10 @@
 #include "mmu.h"
 #include "proc.h"
 
+
+int readcount=0;
+
+
 int
 sys_fork(void)
 {
@@ -89,3 +93,9 @@
   release(&tickslock);
   return xticks;
 }
+
+int
+sys_getreadcount(void)
+{
+  return readcount;
+}
diff -ruN src/test_1.c src-finished/test_1.c
--- src/test_1.c	1970-01-01 08:00:00.000000000 +0800
+++ src-finished/test_1.c	2023-02-25 22:59:42.000000000 +0800
@@ -0,0 +1,19 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+
+int
+main(int argc, char *argv[]) {
+  int x1 = getreadcount();
+  int x2 = getreadcount();
+  char buf[100];
+  (void) read(4, buf, 1);
+  int x3 = getreadcount();
+  int i;
+  for (i = 0; i < 1000; i++) {
+    (void) read(4, buf, 1);
+  }
+  int x4 = getreadcount();
+  printf(1, "XV6_TEST_OUTPUT %d %d %d\n", x2-x1, x3-x2, x4-x3);
+  exit();
+}
diff -ruN src/test_2.c src-finished/test_2.c
--- src/test_2.c	1970-01-01 08:00:00.000000000 +0800
+++ src-finished/test_2.c	2023-02-25 22:59:42.000000000 +0800
@@ -0,0 +1,25 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+
+int
+main(int argc, char *argv[]) {
+    int x1 = getreadcount();
+
+    int rc = fork();
+
+    int total = 0;
+    int i;
+    for (i = 0; i < 100000; i++) {
+	char buf[100];
+	(void) read(4, buf, 1);
+    }
+
+    if (rc > 0) {
+	(void) wait();
+	int x2 = getreadcount();
+	total += (x2 - x1);
+	printf(1, "XV6_TEST_OUTPUT %d\n", total);
+    }
+    exit();
+}
diff -ruN src/user.h src-finished/user.h
--- src/user.h	2022-05-20 22:36:20.000000000 +0800
+++ src-finished/user.h	2023-02-25 22:59:42.000000000 +0800
@@ -23,6 +23,7 @@
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int getreadcount(void);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff -ruN src/usys.S src-finished/usys.S
--- src/usys.S	2022-05-20 22:36:18.000000000 +0800
+++ src-finished/usys.S	2023-02-25 22:59:42.000000000 +0800
@@ -29,3 +29,4 @@
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(getreadcount)
\ No newline at end of file
